{"version":3,"sources":["components/Content/Content.module.css","components/Content/ContentContainer.js"],"names":["module","exports","connect","state","text","contentPage","dispatch","sendContextText","newTextBody","sendContentTextAC","Content"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,aAAe,gC,uFCkDlGC,uBAfO,SAACC,GACnB,MAAO,CACHC,KAAMD,EAAME,YAAYD,SAKP,SAACE,GACtB,MAAO,CACHC,gBADG,SACaC,GACZF,EAASG,YAAkBD,QAKxBN,CAA6CQ","file":"static/js/3.e1c86aba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Content_buttons__3pZSb\",\"buttonCancel\":\"Content_buttonCancel__3aTMw\",\"buttonAccept\":\"Content_buttonAccept__1p0nN\"};","import React, {useState} from 'react'\r\nimport Content from \"./Content\";\r\nimport {connect} from \"react-redux\";\r\nimport {sendContentTextAC} from \"../../redux/contentReducer\";\r\nimport c from './Content.module.css'\r\n\r\n\r\nconst ContentContainer = (props) => {\r\n\r\n    const [disable, change] = useState(false)\r\n\r\n    let buttonChange = () => {\r\n        change(true)\r\n    }\r\n    let buttonAccept = () => {\r\n        change(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Content text={props.text}/>\r\n\r\n            <div className={c.buttons}>\r\n                {!disable && <div>\r\n                    <button onClick={buttonChange} className={c.buttonCancel}>Отклонить</button>\r\n                </div>}\r\n                {disable &&\r\n                <div>\r\n                    <button onClick={buttonAccept}  className={c.buttonAccept}>Принять</button>\r\n                </div>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        text: state.contentPage.text\r\n    }\r\n\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendContextText(newTextBody) {\r\n            dispatch(sendContentTextAC(newTextBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Content)\r\n"],"sourceRoot":""}